{"version":3,"sources":["Nav.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Nav","className","href","target","rel","src","alt","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","backUrl","rLogin","RLogin","cachedProvider","providerOptions","walletconnect","package","WalletConnectProvider","options","rpc","1","30","31","supportedChains","handleInputChangeFactory","setter","e","value","accountToDid","account","App","useState","error","setError","provider","setProvider","dataVault","setDataVault","setAccount","emailAddress","setEmailAddress","wasEmailSent","setWasEmailSent","verificationCode","setVerificationCode","jwt","setJwt","savedInDataVault","setSavedInDataVault","did","handleError","message","onClick","connect","then","request","method","accounts","serviceUrl","DataVaultWebClient","authManager","AuthManager","personalSign","data","params","encryptionManager","EncryptionManager","getEncryptionPublicKey","decrypt","hexCypher","catch","onChange","disabled","placeholder","fetch","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","sig","res","json","style","wordWrap","create","key","content","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.234779b2.chunk.js","sourcesContent":["import React from 'react'\n\nconst Nav = () => <nav className=\"navbar navbar-expand-md navbar-light bg-light fixed-top\">\n  <div className=\"container\">\n    <a className=\"navbar-brand\" href=\"https://rifos.org\" target=\"_blank\" rel=\"noreferrer\">\n      <img src=\"https://rifos.org/assets/img/logo.svg\" className=\"logo\" alt=\"logo\" />\n    </a>\n    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExampleDefault\" aria-controls=\"navbarsExampleDefault\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span className=\"navbar-toggler-icon\"></span>\n    </button>\n    <div className=\"collapse navbar-collapse\" id=\"navbarsExampleDefault\">\n      <ul className=\"navbar-nav ml-auto\">\n        <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"https://developers.rsk.co/rif/identity\" target=\"_blank\" rel=\"noreferrer\">RIF Identity docs</a>\n        </li>\n        <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"https://github.com/rsksmart/email-vc-issuer\" target=\"_blank\" rel=\"noreferrer\">Github</a>\n        </li>\n        <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"https://developers.rsk.co/rif/identity/about\" target=\"_blank\" rel=\"noreferrer\">Contact</a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>\n\nexport default Nav\n","import React, { useState } from 'react'\nimport RLogin from '@rsksmart/rlogin'\nimport WalletConnectProvider from '@walletconnect/web3-provider'\nimport DataVaultWebClient, { AuthManager, EncryptionManager } from '@rsksmart/ipfs-cpinner-client'\nimport Nav from './Nav'\n\nconst backUrl = 'https://email-vc-issuer.staging.rifcomputing.net'\n\ndeclare global {\n  interface Window {\n    ethereum: {\n      enable: () => Promise<string[]>\n    }\n  }\n}\n\ninterface Web3Provider {\n  request: (args: { method: string, params?: any[] }) => Promise<any>\n}\n\nexport const rLogin = new RLogin({\n  cachedProvider: false,\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider,\n      options: {\n        rpc: {\n          1: 'https://mainnet.infura.io/v3/8043bb2cf99347b1bfadfb233c5325c0',\n          30: 'https://public-node.rsk.co',\n          31: 'https://public-node.testnet.rsk.co'\n        }\n      }\n    }\n  },\n  supportedChains: [31]\n})\n\nconst handleInputChangeFactory = (setter: (value: string) => void) => (e: React.ChangeEvent<HTMLInputElement>) => setter(e.target.value)\nconst accountToDid = (account: string) => `did:ethr:rsk:testnet:${account}`\n\nfunction App() {\n  const [error, setError] = useState('')\n  const [provider, setProvider] = useState<Web3Provider | null>(null)\n  const [dataVault, setDataVault] = useState<DataVaultWebClient | null>(null)\n  const [account, setAccount] = useState('')\n  const [emailAddress, setEmailAddress] = useState('')\n  const [wasEmailSent, setWasEmailSent] = useState(false)\n  const [verificationCode, setVerificationCode] = useState('')\n  const [jwt, setJwt] = useState('')\n  const [savedInDataVault, setSavedInDataVault] = useState(false)\n\n  const did = !!account ? accountToDid(account) : ''\n\n  const handleError = (error: Error) => setError(error ? error.message : 'Unhandled error')\n\n  const enable = () => rLogin.connect()\n    .then((provider: Web3Provider) => {\n      setProvider(provider)\n\n      provider.request({ method: 'eth_accounts' }).then((accounts: string[]) => {\n        setAccount(accounts[0])\n        const did = accountToDid(accounts[0])\n\n        const personalSign = (data: string) => provider!.request({ method: 'personal_sign', params: [accounts[0], data] })\n        const decrypt = (hexCypher: string) => provider!.request({ method: 'eth_decrypt', params: [hexCypher, accounts[0]] })\n        const getEncryptionPublicKey = () => provider!.request({ method: 'eth_getEncryptionPublicKey', params: [accounts[0]] })\n        const serviceUrl = 'https://identity.staging.rifcomputing.net'\n\n        const dataVault = new DataVaultWebClient({\n          authManager: new AuthManager({ did, serviceUrl, personalSign }),\n          encryptionManager: new EncryptionManager({ getEncryptionPublicKey, decrypt }),\n          serviceUrl\n        })\n\n        setDataVault(dataVault)\n      })\n    })\n    .catch(handleError)\n\n  const requestVerification = () => fetch(`${backUrl}/requestVerification/` + did, {\n    method: 'POST',\n    mode: 'cors',\n    cache: 'no-cache',\n    credentials: 'same-origin',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    redirect: 'follow',\n    referrerPolicy: 'no-referrer',\n    body: JSON.stringify({ emailAddress })\n  }).then(() => {\n    setWasEmailSent(true)\n  }).catch(handleError)\n\n  const verify = () => provider!.request({\n    method: 'personal_sign',\n    params: [\n      account,\n      `Verification code: ${verificationCode}` // includes the decoration\n    ]\n  }).then((sig: string) => fetch(`${backUrl}/verify/` + did, {\n    method: 'POST',\n    mode: 'cors',\n    cache: 'no-cache',\n    credentials: 'same-origin',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    redirect: 'follow',\n    referrerPolicy: 'no-referrer',\n    body: JSON.stringify({ sig })\n  }))\n    .then(res => res.json())\n    .then(({ jwt }: { jwt: string }) => { setJwt(jwt) })\n    .catch(handleError)\n\n  const saveInDataVault = () => dataVault!.create({ key: 'EmailVerifiableCredential', content: jwt })\n    .then(() => {\n      setSavedInDataVault(true)\n    })\n    .catch(handleError)\n\n\n  return <div>\n    <Nav />\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <h1>Email VC Issuer</h1>\n\n          {error && <p>Error: {error}</p>}\n\n          <h3>1. Enable wallet</h3>\n          <button onClick={enable} className=\"btn btn-primary\">enable</button>\n          <p>{account}</p>\n          <p>{did}</p> {/* fix network according wallet */}\n\n          <h3>2. Request email verification</h3>\n          <div className=\"input-group\">\n            <input type=\"email\" value={emailAddress} onChange={handleInputChangeFactory(setEmailAddress)} disabled={!account} placeholder=\"Email address\" className=\"form-control\" />\n            <div className=\"input-group-append\">\n              <button id=\"request\" onClick={requestVerification} disabled={!account} className=\"btn btn-primary\">request</button>\n            </div>\n          </div>\n          <p>{wasEmailSent && 'Email sent'}</p>\n\n          <h3>3. Verify your email</h3>\n          <div className=\"input-group\">\n            <input type=\"text\" value={verificationCode} onChange={handleInputChangeFactory(setVerificationCode)} disabled={!wasEmailSent} placeholder=\"Verification code\" className=\"form-control\" />\n            <div className=\"input-group-append\">\n              <button onClick={verify} disabled={!wasEmailSent} className=\"btn btn-primary\">verify</button>\n            </div>\n          </div>\n          <p style={{ wordWrap: 'break-word' }}>{jwt}</p>\n\n          <h3>4. Store it in your Data Vault</h3>\n          <button onClick={saveInDataVault} disabled={!jwt} className=\"btn btn-primary\">save</button>\n          <p style={{ wordWrap: 'break-word' }}>{savedInDataVault && 'Saved!'}</p>\n\n          <h3>5. Validate in RIF Id Manager</h3>\n          <p>Go to the <a href=\"https://rsksmart.github.io/rif-identity-manager/\" target=\"_blank\" rel=\"noreferrer\">RIF Identity Manager</a></p>\n        </div>\n      </div>\n    </div>\n  </div>\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}